{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\fmodern\fcharset0 Courier-Oblique;}
{\colortbl;\red255\green255\blue255;\red103\green107\blue114;\red23\green23\blue26;\red195\green123\blue90;
\red174\green176\blue183;\red185\green101\blue173;\red71\green149\blue242;\red89\green158\blue96;\red38\green157\blue169;
\red164\green160\blue78;\red31\green46\blue49;}
{\*\expandedcolortbl;;\csgenericrgb\c40392\c41961\c44706;\csgenericrgb\c9020\c9020\c10196;\csgenericrgb\c76471\c48235\c35294;
\csgenericrgb\c68235\c69020\c71765;\csgenericrgb\c72549\c39608\c67843;\csgenericrgb\c27843\c58431\c94902;\csgenericrgb\c34902\c61961\c37647;\csgenericrgb\c14902\c61569\c66275;
\csgenericrgb\c64314\c62745\c30588;\csgenericrgb\c12157\c18039\c19216;}
\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \cb3 /*Fiodor Culacovschi\
 * CEN 3024 - Software Development 1\
 * October 29th, 2023\
 * GUI LibraryManagementApp.java\
 * This program provides a simple GUI interface for managing library's collection of books.\
 * Users can search for books, load books from a file, remove books, check books in and out, add new books, and view book details.\
 * It also handles the data storage and manipulation for the library's collection.\
 * To run this program on other PC please download the lms test.csv file and the source code .\
 * Configure your IDE for GUI applications.\
 * Change pathways on your PC, run the program.\
 * Program display the main window "Library Management System" with following buttons for interaction:\
 * "Search, add, load content, check-in, check-out, remove by title/by barcode, and exit buttons."\
 * All buttons are functional and perform assigned tasks.\
 * Program has "CardLayout" feature implemented for multiple windows interactions.\
 * Program can allow user to select and load the database file.\
 * Program read and display data from a file, file stored on a local machine.\
 * Program allows user to add books to their collection list by: "Title".\
 * Program displays added books including info about each book.\
 * Program allows user to search for the books within provided database, also it will display if there are\
 * any matches and will offer user to select the desired one.\
 * Selected book will be displayed.\
 * User can remove book from collection list by entering book title or barcode.\
 * The appropriate message will be displayed if user try to remove the book\
 * without book being check-out.\
 * Program has additional functionality such as: user can check the book in and check out.\
 * When user checks in his book program sets up due date automatically from current date.\
 * Program removes due date after successful check out.\
 * All mistakes made by user entering wrong data program displays appropriate messages.\
 * Exit the program button will end the GUI application.\
 */\
\
// importing all necessary libraries for GUI app\
\cf4 import \cf5 javax.swing.*;\
\cf4 import \cf5 java.awt.*;\
\cf4 import \cf5 java.awt.event.ActionEvent;\
\cf4 import \cf5 java.awt.event.ActionListener;\
\cf4 import \cf5 java.io.*;\
\cf4 import \cf5 java.text.SimpleDateFormat;\
\cf4 import \cf5 java.util.ArrayList;\
\cf4 import \cf5 java.util.Calendar;\
\cf4 import \cf5 java.util.List;\
\cf4 import \cf5 java.util.Scanner;\
\
\cf2 /* Fiodor Culacovschi\
* CEN 3024 - Software Development 1\
* October 29th, 2023\
*define the main class,\
*class contains app logic and GUI components such as:\
* mainFrame, mainPanel, CardLayout\
 */\
\cf4 public class \cf5 LibraryManagementSystemApp \{\
    \cf4 private \cf5 List<Book> \cf6 database \cf5 = \cf4 new \cf5 ArrayList<>();\
    \cf4 private \cf5 JTextArea \cf6 outputTextArea\cf5 ;\
    \cf4 private \cf5 JFrame \cf6 mainFrame\cf5 ;\
    \cf4 private \cf5 JFrame \cf6 fileContentFrame\cf5 ;\
    \cf4 private \cf5 JPanel \cf6 mainPanel\cf5 ;\
    \cf4 private \cf5 JPanel \cf6 fileContentPanel\cf5 ;\
    \cf4 private \cf5 CardLayout \cf6 cardLayout\cf5 ;\
\
    \cf2 // main method\
    /* Fiodor Culacovschi\
     * CEN 3024 - Software Development 1\
     * October 29th, 2023\
     * This is where the program starts\
     */\
    \cf4 public static void \cf7 main\cf5 (String[] args) \{\
        SwingUtilities.
\f1\i invokeLater
\f0\i0 (() -> \{\
            LibraryManagementSystemApp app = \cf4 new \cf5 LibraryManagementSystemApp();\
            app.createAndShowGUI();\
        \});\
    \}\
\
    \cf2 // creating GUI\
    \cf4 private void \cf7 createAndShowGUI\cf5 () \{\
        \cf6 mainFrame \cf5 = \cf4 new \cf5 JFrame(\cf8 "Library Management System"\cf5 );\
        \cf6 mainFrame\cf5 .setDefaultCloseOperation(JFrame.
\f1\i \cf6 EXIT_ON_CLOSE
\f0\i0 \cf5 );\
        \cf6 mainFrame\cf5 .setSize(\cf9 400\cf5 , \cf9 400\cf5 );\
\
        \cf6 mainPanel \cf5 = \cf4 new \cf5 JPanel();\
        \cf6 cardLayout \cf5 = \cf4 new \cf5 CardLayout(); \cf2 // for multiple windows interaction\
        \cf6 mainPanel\cf5 .setLayout(\cf6 cardLayout\cf5 );\
\
        \cf6 mainFrame\cf5 .add(\cf6 mainPanel\cf5 );\
\
        createMainView();\
        createFileContentView();\
\
        \cf6 mainFrame\cf5 .setVisible(\cf4 true\cf5 );\
    \}\
\
    \cf2 // main view of the application\
    \cf4 private void \cf7 createMainView\cf5 () \{\
        JPanel panel = \cf4 new \cf5 JPanel();\
        panel.setLayout(\cf4 new \cf5 BorderLayout());\
\
        \cf2 // text area\
        \cf6 outputTextArea \cf5 = \cf4 new \cf5 JTextArea(\cf9 10\cf5 , \cf9 30\cf5 );\
        \cf6 outputTextArea\cf5 .setEditable(\cf4 false\cf5 );\
        JScrollPane scrollPane = \cf4 new \cf5 JScrollPane(\cf6 outputTextArea\cf5 );\
        panel.add(scrollPane, BorderLayout.
\f1\i \cf6 CENTER
\f0\i0 \cf5 );\
\
        \cf2 // create buttons\
        \cf5 JButton loadFromFileButton = \cf4 new \cf5 JButton(\cf8 "Load Books from File"\cf5 );\
        JButton searchBookButton = \cf4 new \cf5 JButton(\cf8 "Search Book"\cf5 );\
        JButton removeByBarcodeButton = \cf4 new \cf5 JButton(\cf8 "Remove by Barcode"\cf5 );\
        JButton removeByTitleButton = \cf4 new \cf5 JButton(\cf8 "Remove by Title"\cf5 );\
        JButton checkOutButton = \cf4 new \cf5 JButton(\cf8 "Check Out Book"\cf5 );\
        JButton checkInButton = \cf4 new \cf5 JButton(\cf8 "Check In Book"\cf5 );\
        JButton addBookButton = \cf4 new \cf5 JButton(\cf8 "Add Book"\cf5 );\
        JButton exitButton = \cf4 new \cf5 JButton(\cf8 "Exit"\cf5 );\
\
        \cf2 // panel for holding buttons\
        \cf5 JPanel buttonPanel = \cf4 new \cf5 JPanel();\
        buttonPanel.add(searchBookButton);\
        buttonPanel.add(loadFromFileButton);\
        buttonPanel.add(removeByBarcodeButton);\
        buttonPanel.add(removeByTitleButton);\
        buttonPanel.add(checkOutButton);\
        buttonPanel.add(checkInButton);\
        buttonPanel.add(addBookButton);\
        buttonPanel.add(exitButton);\
\
        \cf2 // adding this panel to main panel\
        \cf5 panel.add(buttonPanel, BorderLayout.
\f1\i \cf6 SOUTH
\f0\i0 \cf5 );\
        \cf2 // adding main panel to the main frame\
        \cf6 mainPanel\cf5 .add(panel, \cf8 "main"\cf5 );\
\
        \cf2 // searching books by title\
        \cf5 searchBookButton.addActionListener(\cf4 new \cf5 ActionListener() \{\
            \cf10 @Override\
            \cf4 public void \cf7 actionPerformed\cf5 (ActionEvent e) \{\
                String searchTitle = JOptionPane.
\f1\i showInputDialog
\f0\i0 (\cf8 "Enter the book title to search:"\cf5 );\
                \cf4 if \cf5 (searchTitle != \cf4 null\cf5 ) \{\
                    List<Book> matchingBooks = searchBooksByTitle(searchTitle);\
                    \cf4 if \cf5 (!matchingBooks.isEmpty()) \{\
                        \cf6 outputTextArea\cf5 .append(\cf8 "Matching Books for Title '" \cf5 + searchTitle + \cf8 "':\cf4 \\n\\n\cf8 "\cf5 );\
                        \cf4 boolean \cf5 titleDisplayed = \cf4 false\cf5 ;\
                        \cf4 for \cf5 (\cf4 int \cf5 i = \cf9 0\cf5 ; i < matchingBooks.size(); i++) \{\
                            Book book = matchingBooks.get(i);\
                            \cf4 if \cf5 (!titleDisplayed) \{\
                                \cf6 outputTextArea\cf5 .append(\cf8 "Enter the number of the book you want to view:\cf4 \\n\cf8 "\cf5 );\
                                titleDisplayed = \cf4 true\cf5 ;\
                            \}\
                            \cf6 outputTextArea\cf5 .append((i + \cf9 1\cf5 ) + \cf8 ". Barcode: " \cf5 + book.getBarcode() +\
                                    \cf8 ", Author: " \cf5 + book.getAuthor() + \cf8 ", Genre: " \cf5 + book.getGenre() + \cf8 "\cf4 \\n\cf8 "\cf5 );\
                        \}\
                        String selection = JOptionPane.
\f1\i showInputDialog
\f0\i0 (\cf8 "Enter the number of the book you want to view:"\cf5 );\
                        \cf4 if \cf5 (selection != \cf4 null\cf5 ) \{\
                            \cf4 try \cf5 \{\
                                \cf4 int \cf5 selectedIndex = Integer.
\f1\i parseInt
\f0\i0 (selection);\
                                \cf4 if \cf5 (selectedIndex >= \cf9 1 \cf5 && selectedIndex <= matchingBooks.size()) \{\
                                    Book selectedBook = matchingBooks.get(selectedIndex - \cf9 1\cf5 );\
                                    displayBookInfo(selectedBook);\
                                \} \cf4 else \cf5 \{\
                                    \cf6 outputTextArea\cf5 .append(\cf8 "\cf4 \\n\cf8 Invalid selection. Please enter a valid number.\cf4 \\n\cf8 "\cf5 );\
                                \}\
                            \} \cf4 catch \cf5 (NumberFormatException e1) \{\
                                \cf6 outputTextArea\cf5 .append(\cf8 "\cf4 \\n\cf8 Invalid input. Please enter a number to select a book.\cf4 \\n\cf8 "\cf5 );\
                            \}\
                        \}\
                    \} \cf4 else \cf5 \{\
                        \cf6 outputTextArea\cf5 .append(\cf8 "\cf4 \\n\cf8 No matching books found for the title '" \cf5 + searchTitle + \cf8 "'.\cf4 \\n\cf8 "\cf5 );\
                    \}\
                \}\
            \}\
        \});\
\
        \cf2 // loading content from file\
        \cf5 loadFromFileButton.addActionListener(\cf4 new \cf5 ActionListener() \{\
            \cf10 @Override\
            \cf4 public void \cf7 actionPerformed\cf5 (ActionEvent e) \{\
                JFileChooser fileChooser = \cf4 new \cf5 JFileChooser();\
                \cf4 int \cf5 returnValue = fileChooser.showOpenDialog(\cf4 null\cf5 );\
                \cf4 if \cf5 (returnValue == JFileChooser.
\f1\i \cf6 APPROVE_OPTION
\f0\i0 \cf5 ) \{\
                    File selectedFile = fileChooser.getSelectedFile();\
                    loadBooksFromFile(selectedFile);\
                    displayFileContent(selectedFile);\
                    \cf6 cardLayout\cf5 .show(\cf6 mainPanel\cf5 , \cf8 "fileContent"\cf5 );\
                \}\
            \}\
        \});\
\
        \cf2 // removing book by barcode\
        \cf5 removeByBarcodeButton.addActionListener(\cf4 new \cf5 ActionListener() \{\
            \cf10 @Override\
            \cf4 public void \cf7 actionPerformed\cf5 (ActionEvent e) \{\
                String barcode = JOptionPane.
\f1\i showInputDialog
\f0\i0 (\cf8 "Enter the barcode number to remove:"\cf5 );\
                \cf4 if \cf5 (barcode != \cf4 null\cf5 ) \{\
                    Book book = findBookByBarcode(barcode);\
                    \cf4 if \cf5 (book != \cf4 null\cf5 ) \{\
                        \cf4 if \cf5 (book.isCheckedOut()) \{\
                            \cf2 // Book is checked out, so it can be removed\
                            \cf5 removeBook(book);\
                            \cf6 outputTextArea\cf5 .append(\cf8 "\cf4 \\n\cf8 Book with barcode '" \cf5 + barcode + \cf8 "' has been removed.\cf4 \\n\cf8 "\cf5 );\
                        \} \cf4 else \cf5 \{\
                            \cf2 // Book is checked in, display an error message\
                            \cf6 outputTextArea\cf5 .append(\cf8 "\cf4 \\n\cf8 Cannot remove a checked-in book with barcode '" \cf5 + barcode + \cf8 "'. Please check it out first.\cf4 \\n\\n\cf8 "\cf5 );\
                        \}\
                    \} \cf4 else \cf5 \{\
                        \cf6 outputTextArea\cf5 .append(\cf8 "\cf4 \\n\cf8 Book with barcode '" \cf5 + barcode + \cf8 "' not found in the database.\cf4 \\n\cf8 "\cf5 );\
                    \}\
                \}\
            \}\
        \});\
\
        \cf2 // removing book by title\
        \cf5 removeByTitleButton.addActionListener(\cf4 new \cf5 ActionListener() \{\
            \cf10 @Override\
            \cf4 public void \cf7 actionPerformed\cf5 (ActionEvent e) \{\
                String title = JOptionPane.
\f1\i showInputDialog
\f0\i0 (\cf8 "Enter the title to remove:"\cf5 );\
                \cf4 if \cf5 (title != \cf4 null\cf5 ) \{\
                    Book book = findBookInDatabase(title);\
                    \cf4 if \cf5 (book != \cf4 null\cf5 ) \{\
                        \cf4 if \cf5 (book.isCheckedOut()) \{\
                            removeBook(book);\
                            \cf6 outputTextArea\cf5 .append(\cf8 "\cf4 \\n\cf8 Book with title '" \cf5 + title + \cf8 "' has been removed.\cf4 \\n\cf8 "\cf5 );\
                        \} \cf4 else \cf5 \{\
                            \cf6 outputTextArea\cf5 .append(\cf8 "\cf4 \\n\cf8 Cannot remove a checked-in book with title '" \cf5 + title + \cf8 "'. Please check it out first.\cf4 \\n\cf8 "\cf5 );\
                        \}\
                    \} \cf4 else \cf5 \{\
                        \cf6 outputTextArea\cf5 .append(\cf8 "\cf4 \\n\cf8 Book with title '" \cf5 + title + \cf8 "' not found in the database.\cf4 \\n\cf8 "\cf5 );\
                    \}\
                \}\
            \}\
        \});\
\
        \cf2 // book check-out\
        \cf5 checkOutButton.addActionListener(\cf4 new \cf5 ActionListener() \{\
            \cf10 @Override\
            \cf4 public void \cf7 actionPerformed\cf5 (ActionEvent e) \{\
                String title = JOptionPane.
\f1\i showInputDialog
\f0\i0 (\cf8 "Enter the title to check out:"\cf5 );\
                \cf4 if \cf5 (title != \cf4 null\cf5 ) \{\
                    Book book = findBookInDatabase(title);\
                    \cf4 if \cf5 (book != \cf4 null\cf5 ) \{\
                        \cf4 if \cf5 (!book.isCheckedOut()) \{\
                            \cf2 // Update the status\
                            \cf5 book.checkOut();\
                            \cf6 outputTextArea\cf5 .append(\cf8 "\cf4 \\n\cf8 Book '" \cf5 + title + \cf8 "' has been checked out. Status: " \cf5 + book.getStatus() + \cf8 "\cf4 \\n\cf8 "\cf5 );\
                            displayBookInfo(book);\
                        \} \cf4 else \cf5 \{\
                            \cf6 outputTextArea\cf5 .append(\cf8 "\cf4 \\n\cf8 Book '" \cf5 + title + \cf8 "' is already checked out. Status: " \cf5 + book.getStatus() + \cf8 "\cf4 \\n\cf8 "\cf5 );\
                        \}\
                    \} \cf4 else \cf5 \{\
                        \cf6 outputTextArea\cf5 .append(\cf8 "\cf4 \\n\cf8 Book with title '" \cf5 + title + \cf8 "' not found in the database.\cf4 \\n\cf8 "\cf5 );\
                    \}\
                \}\
            \}\
\
        \});\
\
        \cf2 // book check-in\
        \cf5 checkInButton.addActionListener(\cf4 new \cf5 ActionListener() \{\
            \cf10 @Override\
            \cf4 public void \cf7 actionPerformed\cf5 (ActionEvent e) \{\
                String title = JOptionPane.
\f1\i showInputDialog
\f0\i0 (\cf8 "Enter the title to check in:"\cf5 );\
                \cf4 if \cf5 (title != \cf4 null\cf5 ) \{\
                    Book book = findBookInDatabase(title);\
                    \cf4 if \cf5 (book != \cf4 null\cf5 ) \{\
                        \cf2 // Calculate due date (4 weeks from the current date)\
                        \cf5 Calendar calendar = Calendar.
\f1\i getInstance
\f0\i0 ();\
                        calendar.add(Calendar.
\f1\i \cf6 WEEK_OF_YEAR
\f0\i0 \cf5 , \cf9 4\cf5 );\
                        SimpleDateFormat sdf = \cf4 new \cf5 SimpleDateFormat(\cf8 "MM/dd/yyyy"\cf5 );\
                        String dueDate = sdf.format(calendar.getTime());\
\
                        book.checkIn();\
                        book.setStatus(\cf8 "checked-in"\cf5 );\
                        book.setDueDate(dueDate);\
\
                        \cf6 outputTextArea\cf5 .append(\cf8 "\cf4 \\n\cf8 Book '" \cf5 + title + \cf8 "' has been checked in. Due Date: " \cf5 + dueDate + \cf8 "\cf4 \\n\cf8 "\cf5 );\
                        displayBookInfo(book);\
                    \} \cf4 else \cf5 \{\
                        \cf6 outputTextArea\cf5 .append(\cf8 "\cf4 \\n\cf8 Book with title '" \cf5 + title + \cf8 "' not found in the database.\cf4 \\n\cf8 "\cf5 );\
                    \}\
                \}\
            \}\
        \});\
\
        \cf2 // adding book to user collection\
        \cf5 addBookButton.addActionListener(\cf4 new \cf5 ActionListener() \{\
            \cf10 @Override\
            \cf4 public void \cf7 actionPerformed\cf5 (ActionEvent e) \{\
                String titleOrBarcode = JOptionPane.
\f1\i showInputDialog
\f0\i0 (\cf8 "Enter the book title or barcode:"\cf5 );\
                \cf4 if \cf5 (titleOrBarcode != \cf4 null\cf5 ) \{\
                    Book book = findBookByTitleOrBarcode(titleOrBarcode);\
                    \cf4 if \cf5 (book != \cf4 null\cf5 ) \{\
                        displayBookInfo(book);\
                    \} \cf4 else \cf5 \{\
                        \cf6 outputTextArea\cf5 .append(\cf8 "\cf4 \\n\cf8 Book with title or barcode '" \cf5 + titleOrBarcode + \cf8 "' not found in the database.\cf4 \\n\cf8 "\cf5 );\
                    \}\
                \}\
            \}\
        \});\
\
        \cf2 // exiting program\
        \cf5 exitButton.addActionListener(\cf4 new \cf5 ActionListener() \{\
            \cf10 @Override\
            \cf4 public void \cf7 actionPerformed\cf5 (ActionEvent e) \{\
                System.
\f1\i exit
\f0\i0 (\cf9 0\cf5 );\
            \}\
        \});\
    \}\
\
    \cf2 // create view window to display file content\
    \cf4 private void \cf7 createFileContentView\cf5 () \{\
        \cf6 fileContentFrame \cf5 = \cf4 new \cf5 JFrame(\cf8 "File Content"\cf5 );\
        \cf6 fileContentFrame\cf5 .setDefaultCloseOperation(JFrame.
\f1\i \cf6 HIDE_ON_CLOSE
\f0\i0 \cf5 );\
        \cf6 fileContentFrame\cf5 .setSize(\cf9 400\cf5 , \cf9 400\cf5 );\
\
        \cf6 fileContentPanel \cf5 = \cf4 new \cf5 JPanel();\
        \cf6 fileContentPanel\cf5 .setLayout(\cf4 new \cf5 BorderLayout());\
\
        JTextArea contentTextArea = \cf4 new \cf5 JTextArea();\
        contentTextArea.setEditable(\cf4 false\cf5 );\
        JScrollPane scrollPane = \cf4 new \cf5 JScrollPane(contentTextArea);\
        \cf6 fileContentPanel\cf5 .add(scrollPane, BorderLayout.
\f1\i \cf6 CENTER
\f0\i0 \cf5 );\
\
        JButton backButton = \cf4 new \cf5 JButton(\cf8 "Back to Main"\cf5 );\
        backButton.addActionListener(\cf4 new \cf5 ActionListener() \{\
            \cf10 @Override\
            \cf4 public void \cf7 actionPerformed\cf5 (ActionEvent e) \{\
                \cf6 cardLayout\cf5 .show(\cf6 mainPanel\cf5 , \cf8 "main"\cf5 );\
                \cf6 fileContentFrame\cf5 .setVisible(\cf4 false\cf5 );\
            \}\
        \});\
\
        \cf6 fileContentPanel\cf5 .add(backButton, BorderLayout.
\f1\i \cf6 SOUTH
\f0\i0 \cf5 );\
\
        \cf6 fileContentFrame\cf5 .add(\cf6 fileContentPanel\cf5 );\
    \}\
\
    \cf2 // displaying file content\
    \cf4 private void \cf7 displayFileContent\cf5 (File file) \{\
        \cf4 try \cf5 \{\
            StringBuilder content = \cf4 new \cf5 StringBuilder();\
            Scanner scanner = \cf4 new \cf5 Scanner(file);\
            \cf4 while \cf5 (scanner.hasNextLine()) \{\
                content.append(scanner.nextLine()).append(\cf8 "\cf4 \\n\cf8 "\cf5 );\
            \}\
            scanner.close();\
            JTextArea contentTextArea = \cf4 new \cf5 JTextArea(content.toString());\
            contentTextArea.setEditable(\cf4 false\cf5 );\
            JScrollPane scrollPane = \cf4 new \cf5 JScrollPane(contentTextArea);\
            \cf6 fileContentPanel\cf5 .add(scrollPane, BorderLayout.
\f1\i \cf6 CENTER
\f0\i0 \cf5 );\
            \cf6 fileContentFrame\cf5 .setVisible(\cf4 true\cf5 );\
        \} \cf4 catch \cf5 (FileNotFoundException e) \{\
            \cf6 outputTextArea\cf5 .append(\cf8 "Error: File not found\cf4 \\n\cf8 "\cf5 );\
        \}\
    \}\
\
    \cf2 // methods for managing book database\
    // searching through database\
    // methods: searching, removing, loading, displaying.\
    \cf4 private \cf5 Book \cf7 findBookInDatabase\cf5 (String title) \{\
        \cf4 for \cf5 (Book book : \cf6 database\cf5 ) \{\
            \cf4 if \cf5 (book.getTitle().equalsIgnoreCase(title)) \{\
                \cf4 return \cf5 book;\
            \}\
        \}\
        \cf4 return null\cf5 ;\
    \}\
\
    \cf4 private \cf5 Book \cf7 findBookByTitleOrBarcode\cf5 (String titleOrBarcode) \{\
        \cf4 for \cf5 (Book book : \cf6 database\cf5 ) \{\
            \cf4 if \cf5 (book.getTitle().equalsIgnoreCase(titleOrBarcode) || book.getBarcode().equals(titleOrBarcode)) \{\
                \cf4 return \cf5 book;\
            \}\
        \}\
        \cf4 return null\cf5 ;\
    \}\
    \cf4 private \cf5 Book \cf7 findBookByBarcode\cf5 (String barcode) \{\
        \cf4 for \cf5 (Book book : \cf6 database\cf5 ) \{\
            \cf4 if \cf5 (book.getBarcode().equals(barcode)) \{\
                \cf4 return \cf5 book;\
            \}\
        \}\
        \cf4 return null\cf5 ;\
    \};\
\
    \cf2 // Create a method to search for books by title\
    \cf4 private \cf5 List<Book> \cf7 searchBooksByTitle\cf5 (String searchTitle) \{\
        List<Book> matchingBooks = \cf4 new \cf5 ArrayList<>();\
        \cf4 for \cf5 (Book book : \cf6 database\cf5 ) \{\
            \cf4 if \cf5 (book.getTitle().equalsIgnoreCase(searchTitle)) \{\
                matchingBooks.add(book);\
            \}\
        \}\
        \cf4 return \cf5 matchingBooks; \cf2 // return matching values\
    \cf5 \}\
    \cf4 private void \cf7 removeBook\cf5 (Book book) \{\
        \cf6 database\cf5 .remove(book);\
    \}\
\
    \cf2 // loading,reading line by line and displaying file content\
    \cf4 private void \cf7 loadBooksFromFile\cf5 (File file) \{\
        \cf4 try \cf5 \{\
            \cf6 database\cf5 .clear();\
            Scanner scanner = \cf4 new \cf5 Scanner(file);\
            \cf4 while \cf5 (scanner.hasNextLine()) \{\
                String line = scanner.nextLine();\
                String[] parts = line.split(\cf8 "\cb11 ,\cb3 "\cf5 );\
                \cf4 if \cf5 (parts.\cf6 length \cf5 == \cf9 5\cf5 ) \{\
                    String title = parts[\cf9 2\cf5 ];\
                    String barcode = parts[\cf9 0\cf5 ];\
                    String isbn = parts[\cf9 1\cf5 ];\
                    String author = parts[\cf9 3\cf5 ];\
                    String genre = parts[\cf9 4\cf5 ];\
                    Book book = \cf4 new \cf5 Book(title, barcode, isbn, author, genre);\
                    \cf6 database\cf5 .add(book);\
                \}\
            \}\
            scanner.close();\
        \} \cf4 catch \cf5 (FileNotFoundException e) \{\
            \cf6 outputTextArea\cf5 .append(\cf8 "Error: File not found\cf4 \\n\cf8 "\cf5 );\
        \}\
    \}\
\
    \cf2 // a window for displaying an added book info\
    \cf4 private void \cf7 showAddBookDialog\cf5 () \{\
        JFrame addBookFrame = \cf4 new \cf5 JFrame(\cf8 "Add Book"\cf5 );\
        addBookFrame.setDefaultCloseOperation(JFrame.
\f1\i \cf6 DISPOSE_ON_CLOSE
\f0\i0 \cf5 );\
        addBookFrame.setSize(\cf9 400\cf5 , \cf9 200\cf5 );\
        \cf2 // panel for input fields and buttons organization\
        \cf5 JPanel addBookPanel = \cf4 new \cf5 JPanel();\
        addBookPanel.setLayout(\cf4 new \cf5 GridLayout(\cf9 5\cf5 , \cf9 2\cf5 ));\
\
        \cf2 // text fields for user input\
        \cf5 JTextField titleField = \cf4 new \cf5 JTextField();\
        JTextField barcodeField = \cf4 new \cf5 JTextField();\
        JTextField isbnField = \cf4 new \cf5 JTextField();\
        JTextField authorField = \cf4 new \cf5 JTextField();\
        JTextField genreField = \cf4 new \cf5 JTextField();\
\
        \cf2 // field labels\
        \cf5 addBookPanel.add(\cf4 new \cf5 JLabel(\cf8 "Title: "\cf5 ));\
        addBookPanel.add(titleField);\
        addBookPanel.add(\cf4 new \cf5 JLabel(\cf8 "Barcode: "\cf5 ));\
        addBookPanel.add(barcodeField);\
        addBookPanel.add(\cf4 new \cf5 JLabel(\cf8 "ISBN: "\cf5 ));\
        addBookPanel.add(isbnField);\
        addBookPanel.add(\cf4 new \cf5 JLabel(\cf8 "Author: "\cf5 ));\
        addBookPanel.add(authorField);\
        addBookPanel.add(\cf4 new \cf5 JLabel(\cf8 "Genre: "\cf5 ));\
        addBookPanel.add(genreField);\
\
        \cf2 // button to add a book\
        \cf5 JButton addButton = \cf4 new \cf5 JButton(\cf8 "Add Book"\cf5 );\
        addButton.addActionListener(\cf4 new \cf5 ActionListener() \{\
            \cf10 @Override\
            \cf4 public void \cf7 actionPerformed\cf5 (ActionEvent e) \{\
                \cf2 // getting user input from the text fields\
                \cf5 String title = \cf6 titleField\cf5 .getText();\
                String barcode = \cf6 barcodeField\cf5 .getText();\
                String isbn = \cf6 isbnField\cf5 .getText();\
                String author = \cf6 authorField\cf5 .getText();\
                String genre = \cf6 genreField\cf5 .getText();\
\
                \cf2 // fields validation\
                \cf4 if \cf5 (!title.isEmpty() && !barcode.isEmpty() && !isbn.isEmpty() && !author.isEmpty() && !genre.isEmpty()) \{\
                    Book book = \cf4 new \cf5 Book(title, barcode, isbn, author, genre);\
                    \cf6 database\cf5 .add(book);\
                    displayBookInfo(book);\
                    \cf6 addBookFrame\cf5 .dispose();\
                \}\
            \}\
        \});\
\
        \cf2 // adding button to the panel\
        \cf5 addBookPanel.add(addButton);\
\
        addBookFrame.add(addBookPanel);\
        addBookFrame.setVisible(\cf4 true\cf5 ); \cf2 // dialog visibility\
    \cf5 \}\
\
    \cf2 // display book info\
    \cf4 private void \cf7 displayBookInfo\cf5 (Book book) \{\
        \cf6 outputTextArea\cf5 .append(\cf8 "\cf4 \\n\cf8 Book Information:\cf4 \\n\cf8 "\cf5 );\
        \cf6 outputTextArea\cf5 .append(\cf8 "Book barcode: " \cf5 + book.getBarcode() + \cf8 "\cf4 \\n\cf8 "\cf5 );\
        \cf6 outputTextArea\cf5 .append(\cf8 "Title: " \cf5 + book.getTitle() + \cf8 "\cf4 \\n\cf8 "\cf5 );\
        \cf6 outputTextArea\cf5 .append(\cf8 "Author: " \cf5 + book.getAuthor() + \cf8 "\cf4 \\n\cf8 "\cf5 );\
        \cf6 outputTextArea\cf5 .append(\cf8 "Genre: " \cf5 + book.getGenre() + \cf8 "\cf4 \\n\cf8 "\cf5 );\
        \cf6 outputTextArea\cf5 .append(\cf8 "Status: " \cf5 + book.getStatus() + \cf8 "\cf4 \\n\cf8 "\cf5 );\
    \}\
\
    \cf2 // define the inner class book with its attributes\
    // class provides check-in/out books methods\
    \cf4 private class \cf5 Book \{\
        \cf4 private static int 
\f1\i \cf6 nextBookId 
\f0\i0 \cf5 = \cf9 1\cf5 ;\
        \cf4 private int \cf6 bookId\cf5 ;\
        \cf4 private \cf5 String \cf6 barcode\cf5 ;\
        \cf4 private \cf5 String \cf6 isbn\cf5 ;\
        \cf4 private \cf5 String \cf6 title\cf5 ;\
        \cf4 private \cf5 String \cf6 author\cf5 ;\
        \cf4 private \cf5 String \cf6 genre\cf5 ;\
        \cf4 private \cf5 String \cf6 status\cf5 ;\
        \cf4 private boolean \cf6 checkedOut\cf5 ;\
\
        \cf2 // book constructor\
        \cf4 public \cf7 Book\cf5 (String title, String barcode, String isbn, String author, String genre) \{\
            \cf4 this\cf5 .\cf6 bookId \cf5 = 
\f1\i \cf6 nextBookId
\f0\i0 \cf5 ++;\
            \cf4 this\cf5 .\cf6 title \cf5 = title;\
            \cf4 this\cf5 .\cf6 barcode \cf5 = barcode;\
            \cf4 this\cf5 .\cf6 isbn \cf5 = isbn;\
            \cf4 this\cf5 .\cf6 author \cf5 = author;\
            \cf4 this\cf5 .\cf6 genre \cf5 = genre;\
            \cf4 this\cf5 .\cf6 status \cf5 = \cf8 "available"\cf5 ;\
            \cf4 this\cf5 .\cf6 checkedOut \cf5 = \cf4 false\cf5 ;\
        \}\
\
        \cf2 // Getters and Setters\
        \cf4 public int \cf7 getBookId\cf5 () \{\
            \cf4 return \cf6 bookId\cf5 ;\
        \}\
\
        \cf4 public \cf5 String \cf7 getBarcode\cf5 () \{\
            \cf4 return \cf6 barcode\cf5 ;\
        \}\
\
        \cf4 public \cf5 String \cf7 getTitle\cf5 () \{\
            \cf4 return \cf6 title\cf5 ;\
        \}\
\
        \cf4 public \cf5 String \cf7 getAuthor\cf5 () \{\
            \cf4 return \cf6 author\cf5 ;\
        \}\
\
        \cf4 public \cf5 String \cf7 getGenre\cf5 () \{\
            \cf4 return \cf6 genre\cf5 ;\
        \}\
\
        \cf4 public \cf5 String \cf7 getStatus\cf5 () \{\
            \cf4 return \cf6 status\cf5 ;\
        \}\
\
        \cf4 public void \cf7 setStatus\cf5 (String status) \{\
            \cf4 this\cf5 .\cf6 status \cf5 = status;\
        \}\
\
        \cf4 public boolean \cf7 isCheckedOut\cf5 () \{\
            \cf4 return \cf6 checkedOut\cf5 ;\
        \}\
\
        \cf4 public void \cf7 checkOut\cf5 () \{\
            \cf6 checkedOut \cf5 = \cf4 true\cf5 ;\
            setStatus(\cf8 "checked-out"\cf5 );\
        \}\
\
        \cf4 public void \cf7 checkIn\cf5 () \{\
            \cf6 checkedOut \cf5 = \cf4 false\cf5 ;\
            setStatus(\cf8 "checked-in"\cf5 );\
        \}\
\
        \cf4 public void \cf7 setDueDate\cf5 (String dueDate) \{\
        \}\
    \}\
\}\
\
}